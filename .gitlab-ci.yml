# you can delete this line if you're not using Docker
image: busybox:latest
# image: docker:20 # freeze major version for reproducibility

stages:
  - build
  - test
  - deploy
  - stop
  - stop previous jobs


variables:
  IMAGE_TAG: $CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  My_Login: $CI_COMMIT_REF_NAME

include:
  - local: smoke-tests.gitlab-ci.yml
  - local: remote-included.gitlab-ci.yml

cache:
  key:
    files:
      - composer.lock
  paths:
    - vendor/  

before_script:
  - echo "Before script section"
  - echo "For example you might run an update here or install a build dependency"
  - echo "Or perhaps you might print out some debugging details"

after_script:
  - echo "After script section"
  - echo "For example you might do some cleanup here"

build1:
  stage: build
  script:
    - echo "Do your build here"
    - echo "one" > house.txt
    - echo "two" >> house.txt
    - mkdir -p vendor/
    - echo "build" >> vendor/hello.txt
  artifacts:
    paths:
      - house.txt
    expire_in: "30 days"

docker build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_PASSWORD $CI_REGISTRY
    - echo $GITLAB_CI_USER $GITLAB_CI_PASSWORD $CI_REGISTRY $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

test1:
  stage: test
  script:
    - echo "Do a test here"
    - echo "For example run a test suite"
    - grep one house.txt
    - cat vendor/hello.txt

test2:
  stage: test
  script:
    - echo "Do another parallel test here"
    - echo "For example run a lint test"
    - grep two house.txt
    - cat vendor/hello.txt

deploy1:
  stage: deploy
  script:
    - echo "Do your deploy here"
  environment: production

pages:
  stage: deploy
  script:
    - mkdir -p public
    - cp house.txt public/index.html
    - echo 404 >> public/404.html
  artifacts:
    exclude:
      - public/404.html
    paths:
      - public
  only:
    - main

testdocker:
  image: docker:latest
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker images
    - echo "Do another parallel test here"
    - echo "For example run a lint test"
    - docker run $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker ps 
    - echo "----------MY DOCKER IMAGE TEST----------"

deploy to preprod:
    stage: deploy
    variables:
        TARGET_ENV: preprod
    script:
        - echo "Do you deploy here to ${TARGET_ENV}"
        - echo ${DB_SERVER}
        - echo $MyPassword
    only:
        - main
    environment:
        name: preprod
        on_stop: stop to preprod
        auto_stop_in: 1 day

deploy to production:
    stage: deploy
    variables:
        TARGET_ENV: production
    script:
        - echo "Do you deploy here to ${TARGET_ENV}"
        - echo ${DB_SERVER}
        - echo $MyPassword
    only:
        - main
    when: manual
    environment:
        name: production

stop to preprod:
    stage: stop
    variables:
        TARGET_ENV: preprod
    script:
        - echo "STOP ${TARGET_ENV}"
    only:
        - main
    when: manual
    environment:
        name: preprod
        action: stop

stop to production:
    stage: stop
    variables:
        TARGET_ENV: production
    script:
        - echo "STOP ${TARGET_ENV}"
    only:
        - main
    when: manual
    environment:
     name: production
     action: stop


# ------- Cancel -------
cancel:
  stage: stop previous jobs
  image: everpeace/curl-jq
  script:
    - |
      if [ "$CI_COMMIT_REF_NAME" == "main" ]
        then
          (
            echo "Cancel old pipelines from the same branch except last"
            OLD_PIPELINES=$( curl -s -H "PRIVATE-TOKEN: $RUNNER_TOKEN" "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/pipelines?ref=${CI_COMMIT_REF_NAME}&status=running" \
                  | jq '.[] | .id' | tail -n +2 )
                  for pipeline in ${OLD_PIPELINES}; \
                      do echo "Killing ${pipeline}" && \
                        curl -s --request POST -H "PRIVATE-TOKEN: ${RUNNER_TOKEN}" "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/pipelines/${pipeline}/cancel"; done
          ) || echo "Canceling old pipelines (${OLD_PIPELINES}) failed"
      fi
